AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VPCId:
    Type: String
  PublicSubnetOne:
    Type: String
  PublicSubnetTwo:
    Type: String
  FargateContainerSecurityGroup:
    Type: String
  LoadBalancerHTTPSListener:
    Type: String
  CheckpointBucketName:
    Type: String
    Description: Name of the checkpoint S3 bucket
    Default: crux-soak-checkpoints

Resources:
  CheckpointS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref CheckpointBucketName

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 'crux-soak'
      RetentionInDays: 365

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                # Allow the ECS Tasks to download images from ECR
                - 'ecr:GetAuthorizationToken'
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:GetDownloadUrlForLayer'
                - 'ecr:BatchGetImage'

                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: '*'

  SoakTaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: SoakTaskRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: '*'
            - Effect: Allow
              Action:
                - 's3:ListBucket'
              Resource:
                - !GetAtt ['CheckpointS3Bucket', 'Arn']
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:PutObject'
              Resource:
                - !Join ['', [!GetAtt ['CheckpointS3Bucket', 'Arn'], '/*']]

  SoakTaskDef:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - LogGroup
    Properties:
      Cpu: '0.5 vCPU'
      Memory: '2GB'
      Family: 'crux-soak'
      ExecutionRoleArn:
        Fn::GetAtt: ["ECSTaskExecutionRole", "Arn"]
      TaskRoleArn:
        Fn::GetAtt: ["SoakTaskRole", "Arn"]
      RequiresCompatibilities:
        - 'FARGATE'
      NetworkMode: 'awsvpc'
      ContainerDefinitions:
        - Name: 'crux-soak'
          Image: '955308952094.dkr.ecr.eu-west-1.amazonaws.com/crux-soak:latest'
          PortMappings:
            - ContainerPort: 8080
          Command:
            - "-m"
            - "crux.soak.main"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: 'eu-west-1'
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs

  SoakTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /status
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: 'crux-soak'
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPCId
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '10'

  LBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref SoakTargetGroup

      Conditions:
        - Field: host-header
          Values:
            - 'soak.crux.cloud'

      ListenerArn: !Ref LoadBalancerHTTPSListener
      Priority: 10

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: 'crux-soak'
      Cluster: 'crux-soak'
      LaunchType: FARGATE
      HealthCheckGracePeriodSeconds: 10800
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: 0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: 'ENABLED'
          SecurityGroups:
            - !Ref FargateContainerSecurityGroup
          Subnets:
            - !Ref PublicSubnetOne
            - !Ref PublicSubnetTwo
      TaskDefinition: !Ref 'SoakTaskDef'
      LoadBalancers:
        - ContainerName: 'crux-soak'
          ContainerPort: 8080
          TargetGroupArn: !Ref SoakTargetGroup
