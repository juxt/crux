name: build

on: push

jobs:
  #lint:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v1
  #    - name: Run linter
  #      uses: DeLaGuardo/clojure-lint-action@v1
  #      with:
  #        clj-kondo-args: --lint src
  #        github_token: ${{ secrets.GITHUB_TOKEN }}

  jars:
    # needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v1

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '13'

      - name: Setup clojure
        uses: DeLaGuardo/setup-clojure@2.0
        with:
          tools-deps: latest

      - name: Cache clojure deps
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: clojure-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            clojure-

      - name: Run clean
        run: make clean

      - name: install node modules
        run: make install

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: build web
        run: make build

      - name: build uberjar
        run: make jar

      - name: upload skimmed jar
        uses: actions/upload-artifact@v1
        with:
          name: crux-console-skimmed.jar
          path: target/crux-console-skimmed.jar

      - name: upload the jar with crux
        uses: actions/upload-artifact@v1
        with:
          name: crux-console.jar
          path: target/crux-console.jar
